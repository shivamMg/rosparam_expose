#!/usr/bin/env python
import sys
import time

import click
import rosparam
import rospy

from rosparam_expose.srv import Get

NODE_NAME = 'rosparam_expose_sync_client'
SRV_NS = '/rosparam_expose'


@click.command()
@click.argument('param_names')
@click.option('--interval', default=30, type=float, help='number of seconds between syncs')
@click.option('--timeout', default=5, type=float, help='number of seconds to wait for /rosparam_expose/get service')
def sync_client(param_names, interval, timeout):
    """
    Sync parameters from rosparam_expose server ROS master to sync_client ROS master.

    PARAM_NAMES is comma-separated list of parameter names.
    """
    srv = SRV_NS + '/get'
    rospy.wait_for_service(srv, timeout=timeout)
    srv_proxy = rospy.ServiceProxy(srv, Get)

    while not rospy.is_shutdown():
        for param_name in param_names.split(','):
            try:
                response = srv_proxy(param_name)
            except rospy.ServiceException, e:
                if str(e).endswith('is not set'):
                    continue
                click.echo('Service call failed: {}'.format(e), err=True)
                sys.exit(1)
            rosparam.set_param(param_name, response.value)
        time.sleep(interval)


if __name__ == '__main__':
    rospy.init_node(NODE_NAME, anonymous=True)
    sync_client()
